// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-square-matrix@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@esm/index.mjs";var d=e.isPrimitive,l=r,h=t,f=s,u=n,p=i,g=o,j=a,c=m;function v(e,r){return(r?j:g)("float64",new f(e*e),[e,e],[e,1],0,"row-major")}function w(e,r){var t,s=e.shape[0];for(t=0;t<s;t++)e.set(t,t,r);return e}function b(e){var r;return r=new f(e),j("float64",r,[e],[1],0,"row-major")}var x=function(e,r){var t,s,n,i,o,a,m,g;if(g=0,d(e))s=v(t=e,!1);else{if(!l(e))throw new TypeError(u("invalid argument. First argument must either specify the order of the correlation matrix or be a square two-dimensional ndarray for storing the correlation matrix. Value: `%s`.",e));t=e.shape[0],s=e}if(s=w(s,1),m=new f(t),n=new f(t),i=new f(t),a=v(t,!0),arguments.length>1){if(!h(r))throw new TypeError(u("invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.",r));if(c(r.shape)!==t)throw new Error("invalid argument. The number of elements (means) in the second argument must match correlation matrix dimensions. Expected: "+t+". Actual: "+c(r.shape)+".");return o=r,x}return o=b(t),j;function j(e){var r,d,l,f,j,c,v,w,b,x,y,E;if(0===arguments.length)return 0===g?null:s;if(!h(e))throw new TypeError(u("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==t)throw new Error(u("0ejAH",t,e.shape[0]));if(x=(b=g)/(g+=1),r=b||1,1===g)for(y=0;y<t;y++)for(v=e.get(y),w=o.get(y),w+=(c=v-w)/g,o.set(y,w),m[y]=c,n[y]+=c*(v-w),i[y]=p(n[y]/r),d=x*m[y],E=0;E<y;E++)l=a.get(y,E)+d*m[E],a.set(y,E,l),a.set(E,y,l);else for(y=0;y<t;y++)for(v=e.get(y),w=o.get(y),w+=(c=v-w)/g,o.set(y,w),m[y]=c,n[y]+=c*(v-w),i[y]=p(n[y]/r),d=x*m[y],j=i[y],E=0;E<y;E++)l=a.get(y,E)+d*m[E],a.set(y,E,l),a.set(E,y,l),f=l/r/(j*i[E]),s.set(y,E,f),s.set(E,y,f);return s}function x(e){var r,d,l,f,j,c;if(0===arguments.length)return 0===g?null:s;if(!h(e))throw new TypeError(u("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==t)throw new Error(u("0ejAH",t,e.shape[0]));for(g+=1,j=0;j<t;j++)for(f=e.get(j)-o.get(j),m[j]=f,n[j]+=f*f,i[j]=p(n[j]/g),l=i[j],c=0;c<j;c++)d=a.get(j,c)+f*m[c],a.set(j,c,d),a.set(c,j,d),r=d/g/(l*i[c]),s.set(j,c,r),s.set(c,j,r);return s}};export{x as default};
//# sourceMappingURL=index.mjs.map
