// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-square-matrix@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@esm/index.mjs";var d=e.isPrimitive,l=r,u=t,h=s,f=n,p=i,c=a,g=o,j=m;function v(e,r){return(r?g:c)("float64",new h(e*e),[e,e],[e,1],0,"row-major")}function w(e,r){var t,s=e.shape[0];for(t=0;t<s;t++)e.set(t,t,r);return e}function x(e){var r;return r=new h(e),g("float64",r,[e],[1],0,"row-major")}var b=function(e,r){var t,s,n,i,a,o,m,c;if(c=0,d(e))s=v(t=e,!1);else{if(!l(e))throw new TypeError(f("invalid argument. First argument must either specify the order of the correlation matrix or be a square 2-dimensional ndarray for storing the correlation matrix. Value: `%s`.",e));t=e.shape[0],s=e}if(s=w(s,1),m=new h(t),n=new h(t),i=new h(t),o=v(t,!0),arguments.length>1){if(!u(r))throw new TypeError(f("invalid argument. Second argument must be a 1-dimensional ndarray. Value: `%s`.",r));if(j(r.shape)!==t)throw new Error("invalid argument. The number of elements (means) in the second argument must match correlation matrix dimensions. Expected: "+t+". Actual: "+j(r.shape)+".");return a=r,b}return a=x(t),g;function g(e){var r,d,l,h,g,j,v,w,x,b,y,E;if(0===arguments.length)return 0===c?null:s;if(!u(e))throw new TypeError(f("invalid argument. Must provide a 1-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==t)throw new Error(f("invalid argument. Vector length must match correlation matrix dimensions. Expected: `%u`. Actual: `%u`.",t,e.shape[0]));if(b=(x=c)/(c+=1),r=x||1,1===c)for(y=0;y<t;y++)for(v=e.get(y),w=a.get(y),w+=(j=v-w)/c,a.set(y,w),m[y]=j,n[y]+=j*(v-w),i[y]=p(n[y]/r),d=b*m[y],E=0;E<y;E++)l=o.get(y,E)+d*m[E],o.set(y,E,l),o.set(E,y,l);else for(y=0;y<t;y++)for(v=e.get(y),w=a.get(y),w+=(j=v-w)/c,a.set(y,w),m[y]=j,n[y]+=j*(v-w),i[y]=p(n[y]/r),d=b*m[y],g=i[y],E=0;E<y;E++)l=o.get(y,E)+d*m[E],o.set(y,E,l),o.set(E,y,l),h=l/r/(g*i[E]),s.set(y,E,h),s.set(E,y,h);return s}function b(e){var r,d,l,h,g,j;if(0===arguments.length)return 0===c?null:s;if(!u(e))throw new TypeError(f("invalid argument. Must provide a 1-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==t)throw new Error(f("invalid argument. Vector length must match correlation matrix dimensions. Expected: `%u`. Actual: `%u`.",t,e.shape[0]));for(c+=1,g=0;g<t;g++)for(h=e.get(g)-a.get(g),m[g]=h,n[g]+=h*h,i[g]=p(n[g]/c),l=i[g],j=0;j<g;j++)d=o.get(g,j)+h*m[j],o.set(g,j,d),o.set(j,g,d),r=d/c/(l*i[j]),s.set(g,j,r),s.set(j,g,r);return s}};export{b as default};
//# sourceMappingURL=index.mjs.map
